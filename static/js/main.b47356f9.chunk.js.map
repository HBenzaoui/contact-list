{"version":3,"sources":["context.js","component/layout/Header.js","component/pages/About.js","component/pages/NotFound.js","component/contacts/Contact.js","component/contacts/ContactList.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/contacts/EditContact.js","component/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contactList","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","Axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Header","branding","className","Link","to","defaultProps","About","Fragment","NotFound","Contact","showDetails","handleDeleteBtn","delete","_this2","_this$props$contact","name","email","phone","style","cursor","onClick","float","color","bind","marginRight","ContactList","contacts_Contact","TextInputGroup","_ref","label","onChange","error","htmlFor","classnames","is-invalid","prototypes","PropTypes","string","isRequired","func","AddContact","errors","handleChange","e","defineProperty","target","handleSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","onSubmit","layout_TextInputGroup","EditContact","updatedContact","match","params","put","Test","title","body","fetch","then","response","json","console","log","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b47356f9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contactList: state.contactList.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contactList: [action.payload, ...state.contactList]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contactList: state.contactList.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contactList: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await Axios.get('https://jsonplaceholder.typicode.com/users/');\r\n\r\n    this.setState({\r\n      contactList: res.data\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-info mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'Made with ❤ @HBenzaoui'\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contact</p>\r\n      <p className=\"text-secndary\">Version 1.0.0</p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404 Page not Found</span>\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport Axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showDetails: false\r\n  };\r\n\r\n  handleDeleteBtn = async (id, dispatch) => {\r\n    await Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showDetails } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      showDetails: !this.state.showDetails\r\n                    });\r\n                  }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times \"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.handleDeleteBtn.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-edit \"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'green',\r\n                      marginRight: '2rem'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showDetails ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    <p>Email: {email}</p>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <p>Phone: {phone}</p>\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nconst ContactList = () => {\r\n  return (\r\n    <Consumer>\r\n      {value => {\r\n        const { contactList } = value;\r\n        return (\r\n          <React.Fragment>\r\n            <h1 className=\"display-4 mb-2\">\r\n              <span className=\"text-info\">Contact</span> List\r\n            </h1>\r\n            {contactList.map(contact => (\r\n              <Contact key={contact.id} contact={contact} />\r\n            ))}\r\n          </React.Fragment>\r\n        );\r\n      }}\r\n    </Consumer>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({ label, name, value, type, onChange, error }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.prototypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\n// import uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport Axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //check for error\r\n\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Name is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Phone is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      // id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await Axios.post(\r\n      'https://jsonplaceholder.typicode.com/users/',\r\n      newContact\r\n    );\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    //Clear state(inputs)\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    //Redirect to home after adding\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.handleSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.handleChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.handleChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    className=\"btn btn-info btn-block\"\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport Axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    //this is to get the id form the params of the website\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    this.setState({\r\n      name: res.data.name,\r\n      email: res.data.email,\r\n      phone: res.data.phone\r\n    });\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //check for error\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Name is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Phone is required'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updatedContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.put(\r\n      `//jsonplaceholder.typicode.com/users/${id}`,\r\n      updatedContact\r\n    );\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    //Clear state(inputs)\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    //Redirect to home after adding\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.handleSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.handleChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.handleChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    className=\"btn btn-success btn-block\"\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  };\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n  // UNSAFE_componentWillMount() {\r\n  //   console.log('ComponentWillount..');\r\n  // }\r\n  componentDidUpdate() {\r\n    console.log('didUpdate', this.state);\r\n  }\r\n\r\n  // UNSAFE_componentWillReceiveProps(nextProps, nextState) {\r\n  //   console.log('componentWillReceiveProps');\r\n  // }\r\n\r\n  // static getDerivedStateFromProps(nextProps, nextState) {\r\n  //   return null;\r\n  // }\r\n\r\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //   console.log('getSnapshotBeforeUpdate');\r\n  // }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Test Componen </h1>\r\n        <h2>\r\n          <span className=\"text-danger\">{title}</span>\r\n        </h2>\r\n        <h2>{body}</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from './context';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './component/layout/Header';\nimport About from './component/pages/About';\nimport NotFound from './component/pages/NotFound';\nimport ContactList from './component/contacts/ContactList';\nimport AddContact from './component/contacts/AddContact';\nimport EditContact from './component/contacts/EditContact';\nimport Test from './component/test/Test';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <React.Fragment>\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={ContactList} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </React.Fragment>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}